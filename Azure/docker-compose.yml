version: '3.7'

volumes:
  itech-lib-data:

networks:
  lib-network:
    name: lib-network

services:

  library_service_application:
    container_name: ${LIBRARY_SERVICE_CONTAINER}
    image: itechlib.azurecr.io/itechlib2021_library_service_application
    restart: always
    ports:
      - target: 8080
        published: ${LIBRARY_SERVICE_PORT}
        protocol: tcp
        mode: host
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://itech_library_database:5432/${POSTGRES_DB_NAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      TEMPLATE_HOST: ${TEMPLATE_HOST}
    depends_on:
      - itech_library_database
    networks:
      - lib-network

  itech_library_database:
    container_name: ${DATABASE_SERVICE_CONTAINER}
    restart: always
    image: postgres:${POSTGRES_DB_VERSION}
    ports:
      - target: 5432
        published: ${POSTGRES_PORT}
        protocol: tcp
        mode: host
    volumes:
      - itech-lib-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    networks:
      - lib-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - target: 80
        published: 5050
        protocol: tcp
        mode: host
    networks:
      - lib-network

  node:
    image: itechlib.azurecr.io/itechlib2021_node
    restart: always
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    container_name: node_lib
    networks:
      - lib-network
  nginx:
    image:  itechlib.azurecr.io/itechlib2021_nginx
    restart: always
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    container_name: nginx
    networks:
      - lib-network
